package io.sarl.demos.ants

import java.util.UUID
import java.util.concurrent.ConcurrentHashMap
import org.eclipse.xtend.lib.annotations.Accessors
import java.util.ArrayList

/** 
 * Event from the GUI to kill each agent to end the simulation before closing the main window
 */
event Die

/** 
 * Event informing the environment from the real startup of the simulation with the corresponding boids inside
 * @author Nicolas Gaud
 */
event StartEnvironment

event StartAnt {
	val pheromons : double[][]

	new (pheromons : double[][]) {
		this.pheromons = pheromons
	}
}

event TourFound {
	val tour : ArrayList<Integer>
	val length : double

	new (tour : ArrayList<Integer>, length : double) {
		this.tour = tour
		this.length = length
	}
}

/** 
 * Event specifying when the GUI must be refresh according to the new environmental state embodied by the specified map
 * @author Nicolas Gaud
 */
event GuiRepaint 
{
	val tour : ArrayList<Integer>
	val length : double
	val iteration : int
	
	new (tour : ArrayList<Integer>, length : double, iteration : int) {
		this.tour = tour
		this.length = length
		this.iteration = iteration
	}

}
